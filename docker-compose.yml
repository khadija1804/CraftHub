version: '3.8'

services:
  # MongoDB Database
  mongo:
    image: mongo:7.0
    container_name: crafthub-mongo
    environment:
      MONGO_INITDB_DATABASE: craft_hub
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./crafthub-back
      dockerfile: Dockerfile
    container_name: crafthub-backend
    env_file:
      - ./crafthub-back/.env
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://mongo:27017/craft_hub
      JWT_SECRET: CraftHubSecret2025!
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      EMAIL_HOST: smtp.gmail.com
      EMAIL_PORT: 587
    ports:
      - "5000:5000"
    depends_on:
      mongo:
        condition: service_healthy
    volumes:
      - ./crafthub-back/uploads:/app/uploads
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React App
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: crafthub-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongo_data:
